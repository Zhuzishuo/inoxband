---
const { id, imgs, width, height } = Astro.props;

const target = "#" + id;
const targetActiveItem = id + "_activeItem";
---

<astro-carousel
    data-id={id}
    data-active-item={targetActiveItem}
    data-width={width}
    data-height={height}
    data-imgs={imgs}
>
    <div
        id={id}
        class="carousel slide"
        data-bs-ride="carousel"
    >
        <div class="carousel-indicators">
            <button type="button" data-bs-target={target} data-bs-slide-to="0" class="active" aria-current="true"></button>
        </div>
        <div class="carousel-inner">
            <div id={targetActiveItem} class="carousel-item active">
            </div>
        </div>

        <button
            class="carousel-control-prev"
            type="button"
            data-bs-target={target}
            data-bs-slide="prev"
        >
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Previous</span>
        </button>
        <button
            class="carousel-control-next"
            type="button"
            data-bs-target={target}
            data-bs-slide="next"
        >
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Next</span>
        </button>
    </div>
</astro-carousel>

<style>
    .carousel {
        border-radius: 6px;
        overflow: hidden;
    }
</style>

<script>
    class AstroCarousel extends HTMLElement {
        constructor() {
            super();

            // 轮播图ID
            const id = this.dataset.id;
            const target = "#" + id;
            const targetActiveItem = this.dataset.activeItem;

            // 卡片尺寸
            const width = this.dataset.width;
            const height = this.dataset.height;
            const card = document.querySelector("#" + id) as HTMLElement;
            if (width !== null && width !== undefined) {
                card.style.width = width;
            }
            if (height !== null && height !== undefined) {
                card.style.height = height;
            }

            // 图片信息
            const data = this.dataset.imgs;
            const imgs = data !== null && data !== undefined ? JSON.parse(data) : undefined;
            // 轮播图节点
            const carouselInner = document.querySelector("#" + id + " .carousel-inner");
            const indicators = document.querySelector("#" + id + " .carousel-indicators");
            if (
                imgs !== null &&
                imgs !== undefined &&
                carouselInner !== null &&
                carouselInner !== undefined &&
                indicators !== null &&
                indicators !== undefined
            ) {
                for (let index = 0; index < imgs.length; index++) {
                    const element = imgs[index];
                    // 图片跳转链接
                    const href = element["href"];
                    // 图片链接
                    const src = element["src"];
                    if (
                        href !== null &&
                        href !== undefined &&
                        src !== null &&
                        src !== undefined
                    ) {
                        const button = document.createElement("button");
                        if (index !== 0) {
                            button.setAttribute("data-bs-target", target);
                            button.setAttribute("data-bs-slide-to", index + "");
                            button.setAttribute("type", "button");
                            indicators.appendChild(button);
                        }
                        
                        let slide;
                        if (index === 0) {
                            slide = document.querySelector("#" + targetActiveItem);
                        } else {
                            slide = document.createElement("div");
                            slide.classList.add("carousel-item");
                        }
                        const a = createANode(href);
                        const img = createImageNode(src);
                        a.appendChild(img);
                        slide.appendChild(a);
                        carouselInner.appendChild(slide);
                    }
                }
            }
            // const myCarouselElement = document.querySelector("#" + id);
            // if (myCarouselElement !== null && myCarouselElement !== undefined) {
            //     const carousel = new bootstrap.Carousel(myCarouselElement, {
            //         interval: 1500,
            //         touch: false
            //     })
            // }
        }
    }

    function createANode(href) {
        const a = document.createElement("a");
        a.setAttribute("href", href);
        return a;
    }

    function createImageNode(src) {
        const img = document.createElement("img");
        img.classList.add("d-block");
        img.classList.add("w-100");
        img.src = src;
        img.style["border-radius"] = "6px";
        img.style["object-fit"] = "cover";
        return img;
    }

    customElements.define("astro-carousel", AstroCarousel);
</script>
